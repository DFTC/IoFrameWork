// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class CaptureMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_protocol_CaptureReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.CaptureReq, global::protocol.CaptureReq.Builder> internal__static_protocol_CaptureReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protocol_CaptureRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.CaptureRsp, global::protocol.CaptureRsp.Builder> internal__static_protocol_CaptureRsp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static CaptureMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBDYXB0dXJlTXNnLnByb3RvEghwcm90b2NvbBoRSWRlbnRpdHlNc2cucHJv", 
            "dG8aEVByb3RvRGVmaW5lLnByb3RvIokBCgpDYXB0dXJlUmVxEicKBElkZW4Y", 
            "ASACKAsyGS5wcm90b2NvbC5JZGVudGl0eUluZm9Nc2cSEAoIUGFzc3dvcmQY", 
            "AiACKAkSLgoEVHlwZRgDIAEoDjIVLnByb3RvY29sLkNhcHR1cmVUeXBlOglB", 
            "TExfSU1BR0USEAoFQmVnaW4YBCABKA06ATAiuAEKCkNhcHR1cmVSc3ASJwoE", 
            "SWRlbhgBIAIoCzIZLnByb3RvY29sLklkZW50aXR5SW5mb01zZxIMCgRDb2Rl", 
            "GAIgAigNEhAKBUJlZ2luGAMgASgNOgEwEg4KA0VuZBgEIAEoDToBMBIsCgZT", 
            "dGF0dXMYBSABKA4yEy5wcm90b2NvbC5PcHRTdGF0dXM6B1JVTk5JTkcSEAoG", 
            "UmVzdWx0GAYgASgMOgASEQoHRXh0TmFtZRgHIAEoCToAKj4KC0NhcHR1cmVU", 
            "eXBlEg0KCUFMTF9JTUFHRRAAEhEKDUNVUlJFTlRfSU1BR0UQARINCglPTERf", 
          "SU1BR0UQAg=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_protocol_CaptureReq__Descriptor = Descriptor.MessageTypes[0];
        internal__static_protocol_CaptureReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.CaptureReq, global::protocol.CaptureReq.Builder>(internal__static_protocol_CaptureReq__Descriptor,
                new string[] { "Iden", "Password", "Type", "Begin", });
        internal__static_protocol_CaptureRsp__Descriptor = Descriptor.MessageTypes[1];
        internal__static_protocol_CaptureRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.CaptureRsp, global::protocol.CaptureRsp.Builder>(internal__static_protocol_CaptureRsp__Descriptor,
                new string[] { "Iden", "Code", "Begin", "End", "Status", "Result", "ExtName", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::protocol.IdentityMsg.Descriptor, 
          global::protocol.ProtoDefine.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum CaptureType {
    ALL_IMAGE = 0,
    CURRENT_IMAGE = 1,
    OLD_IMAGE = 2,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CaptureReq : pb::GeneratedMessage<CaptureReq, CaptureReq.Builder> {
    private CaptureReq() { }
    private static readonly CaptureReq defaultInstance = new CaptureReq().MakeReadOnly();
    private static readonly string[] _captureReqFieldNames = new string[] { "Begin", "Iden", "Password", "Type" };
    private static readonly uint[] _captureReqFieldTags = new uint[] { 32, 10, 18, 24 };
    public static CaptureReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CaptureReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CaptureReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.CaptureMsg.internal__static_protocol_CaptureReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CaptureReq, CaptureReq.Builder> InternalFieldAccessors {
      get { return global::protocol.CaptureMsg.internal__static_protocol_CaptureReq__FieldAccessorTable; }
    }
    
    public const int IdenFieldNumber = 1;
    private bool hasIden;
    private global::protocol.IdentityInfoMsg iden_;
    public bool HasIden {
      get { return hasIden; }
    }
    public global::protocol.IdentityInfoMsg Iden {
      get { return iden_ ?? global::protocol.IdentityInfoMsg.DefaultInstance; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int TypeFieldNumber = 3;
    private bool hasType;
    private global::protocol.CaptureType type_ = global::protocol.CaptureType.ALL_IMAGE;
    public bool HasType {
      get { return hasType; }
    }
    public global::protocol.CaptureType Type {
      get { return type_; }
    }
    
    public const int BeginFieldNumber = 4;
    private bool hasBegin;
    private uint begin_;
    public bool HasBegin {
      get { return hasBegin; }
    }
    [global::System.CLSCompliant(false)]
    public uint Begin {
      get { return begin_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIden) return false;
        if (!hasPassword) return false;
        if (!Iden.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _captureReqFieldNames;
      if (hasIden) {
        output.WriteMessage(1, field_names[1], Iden);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[2], Password);
      }
      if (hasType) {
        output.WriteEnum(3, field_names[3], (int) Type, Type);
      }
      if (hasBegin) {
        output.WriteUInt32(4, field_names[0], Begin);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIden) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iden);
      }
      if (hasPassword) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Password);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Type);
      }
      if (hasBegin) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, Begin);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CaptureReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CaptureReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CaptureReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CaptureReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CaptureReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CaptureReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CaptureReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CaptureReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CaptureReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CaptureReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CaptureReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CaptureReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CaptureReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CaptureReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CaptureReq result;
      
      private CaptureReq PrepareBuilder() {
        if (resultIsReadOnly) {
          CaptureReq original = result;
          result = new CaptureReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CaptureReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.CaptureReq.Descriptor; }
      }
      
      public override CaptureReq DefaultInstanceForType {
        get { return global::protocol.CaptureReq.DefaultInstance; }
      }
      
      public override CaptureReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CaptureReq) {
          return MergeFrom((CaptureReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CaptureReq other) {
        if (other == global::protocol.CaptureReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIden) {
          MergeIden(other.Iden);
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasBegin) {
          Begin = other.Begin;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_captureReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _captureReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::protocol.IdentityInfoMsg.Builder subBuilder = global::protocol.IdentityInfoMsg.CreateBuilder();
              if (result.hasIden) {
                subBuilder.MergeFrom(Iden);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Iden = subBuilder.BuildPartial();
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasBegin = input.ReadUInt32(ref result.begin_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIden {
       get { return result.hasIden; }
      }
      public global::protocol.IdentityInfoMsg Iden {
        get { return result.Iden; }
        set { SetIden(value); }
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = value;
        return this;
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIden &&
            result.iden_ != global::protocol.IdentityInfoMsg.DefaultInstance) {
            result.iden_ = global::protocol.IdentityInfoMsg.CreateBuilder(result.iden_).MergeFrom(value).BuildPartial();
        } else {
          result.iden_ = value;
        }
        result.hasIden = true;
        return this;
      }
      public Builder ClearIden() {
        PrepareBuilder();
        result.hasIden = false;
        result.iden_ = null;
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::protocol.CaptureType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::protocol.CaptureType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::protocol.CaptureType.ALL_IMAGE;
        return this;
      }
      
      public bool HasBegin {
        get { return result.hasBegin; }
      }
      [global::System.CLSCompliant(false)]
      public uint Begin {
        get { return result.Begin; }
        set { SetBegin(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBegin(uint value) {
        PrepareBuilder();
        result.hasBegin = true;
        result.begin_ = value;
        return this;
      }
      public Builder ClearBegin() {
        PrepareBuilder();
        result.hasBegin = false;
        result.begin_ = 0;
        return this;
      }
    }
    static CaptureReq() {
      object.ReferenceEquals(global::protocol.CaptureMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class CaptureRsp : pb::GeneratedMessage<CaptureRsp, CaptureRsp.Builder> {
    private CaptureRsp() { }
    private static readonly CaptureRsp defaultInstance = new CaptureRsp().MakeReadOnly();
    private static readonly string[] _captureRspFieldNames = new string[] { "Begin", "Code", "End", "ExtName", "Iden", "Result", "Status" };
    private static readonly uint[] _captureRspFieldTags = new uint[] { 24, 16, 32, 58, 10, 50, 40 };
    public static CaptureRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override CaptureRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override CaptureRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.CaptureMsg.internal__static_protocol_CaptureRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<CaptureRsp, CaptureRsp.Builder> InternalFieldAccessors {
      get { return global::protocol.CaptureMsg.internal__static_protocol_CaptureRsp__FieldAccessorTable; }
    }
    
    public const int IdenFieldNumber = 1;
    private bool hasIden;
    private global::protocol.IdentityInfoMsg iden_;
    public bool HasIden {
      get { return hasIden; }
    }
    public global::protocol.IdentityInfoMsg Iden {
      get { return iden_ ?? global::protocol.IdentityInfoMsg.DefaultInstance; }
    }
    
    public const int CodeFieldNumber = 2;
    private bool hasCode;
    private uint code_;
    public bool HasCode {
      get { return hasCode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Code {
      get { return code_; }
    }
    
    public const int BeginFieldNumber = 3;
    private bool hasBegin;
    private uint begin_;
    public bool HasBegin {
      get { return hasBegin; }
    }
    [global::System.CLSCompliant(false)]
    public uint Begin {
      get { return begin_; }
    }
    
    public const int EndFieldNumber = 4;
    private bool hasEnd;
    private uint end_;
    public bool HasEnd {
      get { return hasEnd; }
    }
    [global::System.CLSCompliant(false)]
    public uint End {
      get { return end_; }
    }
    
    public const int StatusFieldNumber = 5;
    private bool hasStatus;
    private global::protocol.OptStatus status_ = global::protocol.OptStatus.RUNNING;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::protocol.OptStatus Status {
      get { return status_; }
    }
    
    public const int ResultFieldNumber = 6;
    private bool hasResult;
    private pb::ByteString result_ = (pb::ByteString) global::protocol.CaptureRsp.Descriptor.Fields[5].DefaultValue;
    public bool HasResult {
      get { return hasResult; }
    }
    public pb::ByteString Result {
      get { return result_; }
    }
    
    public const int ExtNameFieldNumber = 7;
    private bool hasExtName;
    private string extName_ = "";
    public bool HasExtName {
      get { return hasExtName; }
    }
    public string ExtName {
      get { return extName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIden) return false;
        if (!hasCode) return false;
        if (!Iden.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _captureRspFieldNames;
      if (hasIden) {
        output.WriteMessage(1, field_names[4], Iden);
      }
      if (hasCode) {
        output.WriteUInt32(2, field_names[1], Code);
      }
      if (hasBegin) {
        output.WriteUInt32(3, field_names[0], Begin);
      }
      if (hasEnd) {
        output.WriteUInt32(4, field_names[2], End);
      }
      if (hasStatus) {
        output.WriteEnum(5, field_names[6], (int) Status, Status);
      }
      if (hasResult) {
        output.WriteBytes(6, field_names[5], Result);
      }
      if (hasExtName) {
        output.WriteString(7, field_names[3], ExtName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIden) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iden);
      }
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Code);
      }
      if (hasBegin) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Begin);
      }
      if (hasEnd) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, End);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Status);
      }
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeBytesSize(6, Result);
      }
      if (hasExtName) {
        size += pb::CodedOutputStream.ComputeStringSize(7, ExtName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static CaptureRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CaptureRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CaptureRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static CaptureRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static CaptureRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CaptureRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static CaptureRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static CaptureRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static CaptureRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static CaptureRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private CaptureRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(CaptureRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<CaptureRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(CaptureRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private CaptureRsp result;
      
      private CaptureRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          CaptureRsp original = result;
          result = new CaptureRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override CaptureRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.CaptureRsp.Descriptor; }
      }
      
      public override CaptureRsp DefaultInstanceForType {
        get { return global::protocol.CaptureRsp.DefaultInstance; }
      }
      
      public override CaptureRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is CaptureRsp) {
          return MergeFrom((CaptureRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(CaptureRsp other) {
        if (other == global::protocol.CaptureRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIden) {
          MergeIden(other.Iden);
        }
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasBegin) {
          Begin = other.Begin;
        }
        if (other.HasEnd) {
          End = other.End;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasExtName) {
          ExtName = other.ExtName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_captureRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _captureRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::protocol.IdentityInfoMsg.Builder subBuilder = global::protocol.IdentityInfoMsg.CreateBuilder();
              if (result.hasIden) {
                subBuilder.MergeFrom(Iden);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Iden = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasCode = input.ReadUInt32(ref result.code_);
              break;
            }
            case 24: {
              result.hasBegin = input.ReadUInt32(ref result.begin_);
              break;
            }
            case 32: {
              result.hasEnd = input.ReadUInt32(ref result.end_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              result.hasResult = input.ReadBytes(ref result.result_);
              break;
            }
            case 58: {
              result.hasExtName = input.ReadString(ref result.extName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIden {
       get { return result.hasIden; }
      }
      public global::protocol.IdentityInfoMsg Iden {
        get { return result.Iden; }
        set { SetIden(value); }
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = value;
        return this;
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIden &&
            result.iden_ != global::protocol.IdentityInfoMsg.DefaultInstance) {
            result.iden_ = global::protocol.IdentityInfoMsg.CreateBuilder(result.iden_).MergeFrom(value).BuildPartial();
        } else {
          result.iden_ = value;
        }
        result.hasIden = true;
        return this;
      }
      public Builder ClearIden() {
        PrepareBuilder();
        result.hasIden = false;
        result.iden_ = null;
        return this;
      }
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCode(uint value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
      
      public bool HasBegin {
        get { return result.hasBegin; }
      }
      [global::System.CLSCompliant(false)]
      public uint Begin {
        get { return result.Begin; }
        set { SetBegin(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBegin(uint value) {
        PrepareBuilder();
        result.hasBegin = true;
        result.begin_ = value;
        return this;
      }
      public Builder ClearBegin() {
        PrepareBuilder();
        result.hasBegin = false;
        result.begin_ = 0;
        return this;
      }
      
      public bool HasEnd {
        get { return result.hasEnd; }
      }
      [global::System.CLSCompliant(false)]
      public uint End {
        get { return result.End; }
        set { SetEnd(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEnd(uint value) {
        PrepareBuilder();
        result.hasEnd = true;
        result.end_ = value;
        return this;
      }
      public Builder ClearEnd() {
        PrepareBuilder();
        result.hasEnd = false;
        result.end_ = 0;
        return this;
      }
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::protocol.OptStatus Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::protocol.OptStatus value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::protocol.OptStatus.RUNNING;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public pb::ByteString Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = (pb::ByteString) global::protocol.CaptureRsp.Descriptor.Fields[5].DefaultValue;
        return this;
      }
      
      public bool HasExtName {
        get { return result.hasExtName; }
      }
      public string ExtName {
        get { return result.ExtName; }
        set { SetExtName(value); }
      }
      public Builder SetExtName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExtName = true;
        result.extName_ = value;
        return this;
      }
      public Builder ClearExtName() {
        PrepareBuilder();
        result.hasExtName = false;
        result.extName_ = "";
        return this;
      }
    }
    static CaptureRsp() {
      object.ReferenceEquals(global::protocol.CaptureMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
