// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class GetLogMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_protocol_GetLogReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.GetLogReq, global::protocol.GetLogReq.Builder> internal__static_protocol_GetLogReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protocol_GetLogRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.GetLogRsp, global::protocol.GetLogRsp.Builder> internal__static_protocol_GetLogRsp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static GetLogMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9HZXRMb2dNc2cucHJvdG8SCHByb3RvY29sGhFQcm90b0RlZmluZS5wcm90", 
            "bxoRSWRlbnRpdHlNc2cucHJvdG8icAoJR2V0TG9nUmVxEicKBElkZW4YASAC", 
            "KAsyGS5wcm90b2NvbC5JZGVudGl0eUluZm9Nc2cSKAoEVHlwZRgCIAEoDjIR", 
            "LnByb3RvY29sLkxvZ1R5cGU6B0FMTF9MT0cSEAoFQmVnaW4YAyABKA06ATAi", 
            "twEKCUdldExvZ1JzcBInCgRJZGVuGAEgAigLMhkucHJvdG9jb2wuSWRlbnRp", 
            "dHlJbmZvTXNnEgwKBENvZGUYAiACKA0SEAoFQmVnaW4YAyABKA06ATASDgoD", 
            "RW5kGAQgASgNOgEwEiwKBlN0YXR1cxgFIAEoDjITLnByb3RvY29sLk9wdFN0", 
            "YXR1czoHUlVOTklORxIQCgZSZXN1bHQYBiABKAw6ABIRCgdFeHROYW1lGAcg", 
            "ASgJOgAqWQoHTG9nVHlwZRILCgdBTExfTE9HEAASDwoLVVBHUkFERV9MT0cQ", 
            "ARIOCgpOT1JNQUxfTE9HEAISEAoMQUJOT1JNQUxfTE9HEAMSDgoKU1RBVFVT", 
          "X0xPRxAE"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_protocol_GetLogReq__Descriptor = Descriptor.MessageTypes[0];
        internal__static_protocol_GetLogReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.GetLogReq, global::protocol.GetLogReq.Builder>(internal__static_protocol_GetLogReq__Descriptor,
                new string[] { "Iden", "Type", "Begin", });
        internal__static_protocol_GetLogRsp__Descriptor = Descriptor.MessageTypes[1];
        internal__static_protocol_GetLogRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.GetLogRsp, global::protocol.GetLogRsp.Builder>(internal__static_protocol_GetLogRsp__Descriptor,
                new string[] { "Iden", "Code", "Begin", "End", "Status", "Result", "ExtName", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::protocol.ProtoDefine.Descriptor, 
          global::protocol.IdentityMsg.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum LogType {
    ALL_LOG = 0,
    UPGRADE_LOG = 1,
    NORMAL_LOG = 2,
    ABNORMAL_LOG = 3,
    STATUS_LOG = 4,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetLogReq : pb::GeneratedMessage<GetLogReq, GetLogReq.Builder> {
    private GetLogReq() { }
    private static readonly GetLogReq defaultInstance = new GetLogReq().MakeReadOnly();
    private static readonly string[] _getLogReqFieldNames = new string[] { "Begin", "Iden", "Type" };
    private static readonly uint[] _getLogReqFieldTags = new uint[] { 24, 10, 16 };
    public static GetLogReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetLogReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetLogReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.GetLogMsg.internal__static_protocol_GetLogReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetLogReq, GetLogReq.Builder> InternalFieldAccessors {
      get { return global::protocol.GetLogMsg.internal__static_protocol_GetLogReq__FieldAccessorTable; }
    }
    
    public const int IdenFieldNumber = 1;
    private bool hasIden;
    private global::protocol.IdentityInfoMsg iden_;
    public bool HasIden {
      get { return hasIden; }
    }
    public global::protocol.IdentityInfoMsg Iden {
      get { return iden_ ?? global::protocol.IdentityInfoMsg.DefaultInstance; }
    }
    
    public const int TypeFieldNumber = 2;
    private bool hasType;
    private global::protocol.LogType type_ = global::protocol.LogType.ALL_LOG;
    public bool HasType {
      get { return hasType; }
    }
    public global::protocol.LogType Type {
      get { return type_; }
    }
    
    public const int BeginFieldNumber = 3;
    private bool hasBegin;
    private uint begin_;
    public bool HasBegin {
      get { return hasBegin; }
    }
    [global::System.CLSCompliant(false)]
    public uint Begin {
      get { return begin_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIden) return false;
        if (!Iden.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getLogReqFieldNames;
      if (hasIden) {
        output.WriteMessage(1, field_names[1], Iden);
      }
      if (hasType) {
        output.WriteEnum(2, field_names[2], (int) Type, Type);
      }
      if (hasBegin) {
        output.WriteUInt32(3, field_names[0], Begin);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIden) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iden);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Type);
      }
      if (hasBegin) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Begin);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetLogReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLogReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLogReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLogReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLogReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLogReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetLogReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetLogReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetLogReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLogReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetLogReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetLogReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetLogReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetLogReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetLogReq result;
      
      private GetLogReq PrepareBuilder() {
        if (resultIsReadOnly) {
          GetLogReq original = result;
          result = new GetLogReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetLogReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.GetLogReq.Descriptor; }
      }
      
      public override GetLogReq DefaultInstanceForType {
        get { return global::protocol.GetLogReq.DefaultInstance; }
      }
      
      public override GetLogReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetLogReq) {
          return MergeFrom((GetLogReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetLogReq other) {
        if (other == global::protocol.GetLogReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIden) {
          MergeIden(other.Iden);
        }
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasBegin) {
          Begin = other.Begin;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getLogReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getLogReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::protocol.IdentityInfoMsg.Builder subBuilder = global::protocol.IdentityInfoMsg.CreateBuilder();
              if (result.hasIden) {
                subBuilder.MergeFrom(Iden);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Iden = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.type_, out unknown)) {
                result.hasType = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              result.hasBegin = input.ReadUInt32(ref result.begin_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIden {
       get { return result.hasIden; }
      }
      public global::protocol.IdentityInfoMsg Iden {
        get { return result.Iden; }
        set { SetIden(value); }
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = value;
        return this;
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIden &&
            result.iden_ != global::protocol.IdentityInfoMsg.DefaultInstance) {
            result.iden_ = global::protocol.IdentityInfoMsg.CreateBuilder(result.iden_).MergeFrom(value).BuildPartial();
        } else {
          result.iden_ = value;
        }
        result.hasIden = true;
        return this;
      }
      public Builder ClearIden() {
        PrepareBuilder();
        result.hasIden = false;
        result.iden_ = null;
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::protocol.LogType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::protocol.LogType value) {
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = global::protocol.LogType.ALL_LOG;
        return this;
      }
      
      public bool HasBegin {
        get { return result.hasBegin; }
      }
      [global::System.CLSCompliant(false)]
      public uint Begin {
        get { return result.Begin; }
        set { SetBegin(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBegin(uint value) {
        PrepareBuilder();
        result.hasBegin = true;
        result.begin_ = value;
        return this;
      }
      public Builder ClearBegin() {
        PrepareBuilder();
        result.hasBegin = false;
        result.begin_ = 0;
        return this;
      }
    }
    static GetLogReq() {
      object.ReferenceEquals(global::protocol.GetLogMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GetLogRsp : pb::GeneratedMessage<GetLogRsp, GetLogRsp.Builder> {
    private GetLogRsp() { }
    private static readonly GetLogRsp defaultInstance = new GetLogRsp().MakeReadOnly();
    private static readonly string[] _getLogRspFieldNames = new string[] { "Begin", "Code", "End", "ExtName", "Iden", "Result", "Status" };
    private static readonly uint[] _getLogRspFieldTags = new uint[] { 24, 16, 32, 58, 10, 50, 40 };
    public static GetLogRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GetLogRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GetLogRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.GetLogMsg.internal__static_protocol_GetLogRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GetLogRsp, GetLogRsp.Builder> InternalFieldAccessors {
      get { return global::protocol.GetLogMsg.internal__static_protocol_GetLogRsp__FieldAccessorTable; }
    }
    
    public const int IdenFieldNumber = 1;
    private bool hasIden;
    private global::protocol.IdentityInfoMsg iden_;
    public bool HasIden {
      get { return hasIden; }
    }
    public global::protocol.IdentityInfoMsg Iden {
      get { return iden_ ?? global::protocol.IdentityInfoMsg.DefaultInstance; }
    }
    
    public const int CodeFieldNumber = 2;
    private bool hasCode;
    private uint code_;
    public bool HasCode {
      get { return hasCode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Code {
      get { return code_; }
    }
    
    public const int BeginFieldNumber = 3;
    private bool hasBegin;
    private uint begin_;
    public bool HasBegin {
      get { return hasBegin; }
    }
    [global::System.CLSCompliant(false)]
    public uint Begin {
      get { return begin_; }
    }
    
    public const int EndFieldNumber = 4;
    private bool hasEnd;
    private uint end_;
    public bool HasEnd {
      get { return hasEnd; }
    }
    [global::System.CLSCompliant(false)]
    public uint End {
      get { return end_; }
    }
    
    public const int StatusFieldNumber = 5;
    private bool hasStatus;
    private global::protocol.OptStatus status_ = global::protocol.OptStatus.RUNNING;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::protocol.OptStatus Status {
      get { return status_; }
    }
    
    public const int ResultFieldNumber = 6;
    private bool hasResult;
    private pb::ByteString result_ = (pb::ByteString) global::protocol.GetLogRsp.Descriptor.Fields[5].DefaultValue;
    public bool HasResult {
      get { return hasResult; }
    }
    public pb::ByteString Result {
      get { return result_; }
    }
    
    public const int ExtNameFieldNumber = 7;
    private bool hasExtName;
    private string extName_ = "";
    public bool HasExtName {
      get { return hasExtName; }
    }
    public string ExtName {
      get { return extName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIden) return false;
        if (!hasCode) return false;
        if (!Iden.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _getLogRspFieldNames;
      if (hasIden) {
        output.WriteMessage(1, field_names[4], Iden);
      }
      if (hasCode) {
        output.WriteUInt32(2, field_names[1], Code);
      }
      if (hasBegin) {
        output.WriteUInt32(3, field_names[0], Begin);
      }
      if (hasEnd) {
        output.WriteUInt32(4, field_names[2], End);
      }
      if (hasStatus) {
        output.WriteEnum(5, field_names[6], (int) Status, Status);
      }
      if (hasResult) {
        output.WriteBytes(6, field_names[5], Result);
      }
      if (hasExtName) {
        output.WriteString(7, field_names[3], ExtName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIden) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iden);
      }
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Code);
      }
      if (hasBegin) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, Begin);
      }
      if (hasEnd) {
        size += pb::CodedOutputStream.ComputeUInt32Size(4, End);
      }
      if (hasStatus) {
        size += pb::CodedOutputStream.ComputeEnumSize(5, (int) Status);
      }
      if (hasResult) {
        size += pb::CodedOutputStream.ComputeBytesSize(6, Result);
      }
      if (hasExtName) {
        size += pb::CodedOutputStream.ComputeStringSize(7, ExtName);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GetLogRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLogRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLogRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GetLogRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GetLogRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLogRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GetLogRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GetLogRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GetLogRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GetLogRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GetLogRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GetLogRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GetLogRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GetLogRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GetLogRsp result;
      
      private GetLogRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          GetLogRsp original = result;
          result = new GetLogRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GetLogRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.GetLogRsp.Descriptor; }
      }
      
      public override GetLogRsp DefaultInstanceForType {
        get { return global::protocol.GetLogRsp.DefaultInstance; }
      }
      
      public override GetLogRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GetLogRsp) {
          return MergeFrom((GetLogRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GetLogRsp other) {
        if (other == global::protocol.GetLogRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIden) {
          MergeIden(other.Iden);
        }
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasBegin) {
          Begin = other.Begin;
        }
        if (other.HasEnd) {
          End = other.End;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasResult) {
          Result = other.Result;
        }
        if (other.HasExtName) {
          ExtName = other.ExtName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_getLogRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _getLogRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::protocol.IdentityInfoMsg.Builder subBuilder = global::protocol.IdentityInfoMsg.CreateBuilder();
              if (result.hasIden) {
                subBuilder.MergeFrom(Iden);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Iden = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasCode = input.ReadUInt32(ref result.code_);
              break;
            }
            case 24: {
              result.hasBegin = input.ReadUInt32(ref result.begin_);
              break;
            }
            case 32: {
              result.hasEnd = input.ReadUInt32(ref result.end_);
              break;
            }
            case 40: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(5, (ulong)(int)unknown);
              }
              break;
            }
            case 50: {
              result.hasResult = input.ReadBytes(ref result.result_);
              break;
            }
            case 58: {
              result.hasExtName = input.ReadString(ref result.extName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIden {
       get { return result.hasIden; }
      }
      public global::protocol.IdentityInfoMsg Iden {
        get { return result.Iden; }
        set { SetIden(value); }
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = value;
        return this;
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIden &&
            result.iden_ != global::protocol.IdentityInfoMsg.DefaultInstance) {
            result.iden_ = global::protocol.IdentityInfoMsg.CreateBuilder(result.iden_).MergeFrom(value).BuildPartial();
        } else {
          result.iden_ = value;
        }
        result.hasIden = true;
        return this;
      }
      public Builder ClearIden() {
        PrepareBuilder();
        result.hasIden = false;
        result.iden_ = null;
        return this;
      }
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCode(uint value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
      
      public bool HasBegin {
        get { return result.hasBegin; }
      }
      [global::System.CLSCompliant(false)]
      public uint Begin {
        get { return result.Begin; }
        set { SetBegin(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetBegin(uint value) {
        PrepareBuilder();
        result.hasBegin = true;
        result.begin_ = value;
        return this;
      }
      public Builder ClearBegin() {
        PrepareBuilder();
        result.hasBegin = false;
        result.begin_ = 0;
        return this;
      }
      
      public bool HasEnd {
        get { return result.hasEnd; }
      }
      [global::System.CLSCompliant(false)]
      public uint End {
        get { return result.End; }
        set { SetEnd(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetEnd(uint value) {
        PrepareBuilder();
        result.hasEnd = true;
        result.end_ = value;
        return this;
      }
      public Builder ClearEnd() {
        PrepareBuilder();
        result.hasEnd = false;
        result.end_ = 0;
        return this;
      }
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::protocol.OptStatus Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::protocol.OptStatus value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::protocol.OptStatus.RUNNING;
        return this;
      }
      
      public bool HasResult {
        get { return result.hasResult; }
      }
      public pb::ByteString Result {
        get { return result.Result; }
        set { SetResult(value); }
      }
      public Builder SetResult(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder ClearResult() {
        PrepareBuilder();
        result.hasResult = false;
        result.result_ = (pb::ByteString) global::protocol.GetLogRsp.Descriptor.Fields[5].DefaultValue;
        return this;
      }
      
      public bool HasExtName {
        get { return result.hasExtName; }
      }
      public string ExtName {
        get { return result.ExtName; }
        set { SetExtName(value); }
      }
      public Builder SetExtName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExtName = true;
        result.extName_ = value;
        return this;
      }
      public Builder ClearExtName() {
        PrepareBuilder();
        result.hasExtName = false;
        result.extName_ = "";
        return this;
      }
    }
    static GetLogRsp() {
      object.ReferenceEquals(global::protocol.GetLogMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
