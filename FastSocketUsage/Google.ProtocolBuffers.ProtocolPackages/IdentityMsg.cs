// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class IdentityMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_protocol_IdentityInfoMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.IdentityInfoMsg, global::protocol.IdentityInfoMsg.Builder> internal__static_protocol_IdentityInfoMsg__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protocol_IdentityInfoCliMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.IdentityInfoCliMsg, global::protocol.IdentityInfoCliMsg.Builder> internal__static_protocol_IdentityInfoCliMsg__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static IdentityMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFJZGVudGl0eU1zZy5wcm90bxIIcHJvdG9jb2waEVByb3RvRGVmaW5lLnBy", 
            "b3RvIlAKD0lkZW50aXR5SW5mb01zZxILCgNNYWMYASACKAkSIQoDRGV2GAIg", 
            "AigOMhQucHJvdG9jb2wuRGV2aWNlVHlwZRINCgVVc3JJZBgDIAIoDSIwChJJ", 
          "ZGVudGl0eUluZm9DbGlNc2cSCwoDTWFjGAEgAigJEg0KBVVzcklkGAIgAigN"));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_protocol_IdentityInfoMsg__Descriptor = Descriptor.MessageTypes[0];
        internal__static_protocol_IdentityInfoMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.IdentityInfoMsg, global::protocol.IdentityInfoMsg.Builder>(internal__static_protocol_IdentityInfoMsg__Descriptor,
                new string[] { "Mac", "Dev", "UsrId", });
        internal__static_protocol_IdentityInfoCliMsg__Descriptor = Descriptor.MessageTypes[1];
        internal__static_protocol_IdentityInfoCliMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.IdentityInfoCliMsg, global::protocol.IdentityInfoCliMsg.Builder>(internal__static_protocol_IdentityInfoCliMsg__Descriptor,
                new string[] { "Mac", "UsrId", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::protocol.ProtoDefine.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IdentityInfoMsg : pb::GeneratedMessage<IdentityInfoMsg, IdentityInfoMsg.Builder> {
    private IdentityInfoMsg() { }
    private static readonly IdentityInfoMsg defaultInstance = new IdentityInfoMsg().MakeReadOnly();
    private static readonly string[] _identityInfoMsgFieldNames = new string[] { "Dev", "Mac", "UsrId" };
    private static readonly uint[] _identityInfoMsgFieldTags = new uint[] { 16, 10, 24 };
    public static IdentityInfoMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IdentityInfoMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IdentityInfoMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.IdentityMsg.internal__static_protocol_IdentityInfoMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IdentityInfoMsg, IdentityInfoMsg.Builder> InternalFieldAccessors {
      get { return global::protocol.IdentityMsg.internal__static_protocol_IdentityInfoMsg__FieldAccessorTable; }
    }
    
    public const int MacFieldNumber = 1;
    private bool hasMac;
    private string mac_ = "";
    public bool HasMac {
      get { return hasMac; }
    }
    public string Mac {
      get { return mac_; }
    }
    
    public const int DevFieldNumber = 2;
    private bool hasDev;
    private global::protocol.DeviceType dev_ = global::protocol.DeviceType.D_3716;
    public bool HasDev {
      get { return hasDev; }
    }
    public global::protocol.DeviceType Dev {
      get { return dev_; }
    }
    
    public const int UsrIdFieldNumber = 3;
    private bool hasUsrId;
    private uint usrId_;
    public bool HasUsrId {
      get { return hasUsrId; }
    }
    [global::System.CLSCompliant(false)]
    public uint UsrId {
      get { return usrId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMac) return false;
        if (!hasDev) return false;
        if (!hasUsrId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _identityInfoMsgFieldNames;
      if (hasMac) {
        output.WriteString(1, field_names[1], Mac);
      }
      if (hasDev) {
        output.WriteEnum(2, field_names[0], (int) Dev, Dev);
      }
      if (hasUsrId) {
        output.WriteUInt32(3, field_names[2], UsrId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMac) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Mac);
      }
      if (hasDev) {
        size += pb::CodedOutputStream.ComputeEnumSize(2, (int) Dev);
      }
      if (hasUsrId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(3, UsrId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IdentityInfoMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IdentityInfoMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IdentityInfoMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IdentityInfoMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IdentityInfoMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IdentityInfoMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IdentityInfoMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IdentityInfoMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IdentityInfoMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IdentityInfoMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IdentityInfoMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IdentityInfoMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IdentityInfoMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IdentityInfoMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IdentityInfoMsg result;
      
      private IdentityInfoMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          IdentityInfoMsg original = result;
          result = new IdentityInfoMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IdentityInfoMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.IdentityInfoMsg.Descriptor; }
      }
      
      public override IdentityInfoMsg DefaultInstanceForType {
        get { return global::protocol.IdentityInfoMsg.DefaultInstance; }
      }
      
      public override IdentityInfoMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IdentityInfoMsg) {
          return MergeFrom((IdentityInfoMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IdentityInfoMsg other) {
        if (other == global::protocol.IdentityInfoMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMac) {
          Mac = other.Mac;
        }
        if (other.HasDev) {
          Dev = other.Dev;
        }
        if (other.HasUsrId) {
          UsrId = other.UsrId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_identityInfoMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _identityInfoMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMac = input.ReadString(ref result.mac_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.dev_, out unknown)) {
                result.hasDev = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              result.hasUsrId = input.ReadUInt32(ref result.usrId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMac {
        get { return result.hasMac; }
      }
      public string Mac {
        get { return result.Mac; }
        set { SetMac(value); }
      }
      public Builder SetMac(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMac = true;
        result.mac_ = value;
        return this;
      }
      public Builder ClearMac() {
        PrepareBuilder();
        result.hasMac = false;
        result.mac_ = "";
        return this;
      }
      
      public bool HasDev {
       get { return result.hasDev; }
      }
      public global::protocol.DeviceType Dev {
        get { return result.Dev; }
        set { SetDev(value); }
      }
      public Builder SetDev(global::protocol.DeviceType value) {
        PrepareBuilder();
        result.hasDev = true;
        result.dev_ = value;
        return this;
      }
      public Builder ClearDev() {
        PrepareBuilder();
        result.hasDev = false;
        result.dev_ = global::protocol.DeviceType.D_3716;
        return this;
      }
      
      public bool HasUsrId {
        get { return result.hasUsrId; }
      }
      [global::System.CLSCompliant(false)]
      public uint UsrId {
        get { return result.UsrId; }
        set { SetUsrId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUsrId(uint value) {
        PrepareBuilder();
        result.hasUsrId = true;
        result.usrId_ = value;
        return this;
      }
      public Builder ClearUsrId() {
        PrepareBuilder();
        result.hasUsrId = false;
        result.usrId_ = 0;
        return this;
      }
    }
    static IdentityInfoMsg() {
      object.ReferenceEquals(global::protocol.IdentityMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class IdentityInfoCliMsg : pb::GeneratedMessage<IdentityInfoCliMsg, IdentityInfoCliMsg.Builder> {
    private IdentityInfoCliMsg() { }
    private static readonly IdentityInfoCliMsg defaultInstance = new IdentityInfoCliMsg().MakeReadOnly();
    private static readonly string[] _identityInfoCliMsgFieldNames = new string[] { "Mac", "UsrId" };
    private static readonly uint[] _identityInfoCliMsgFieldTags = new uint[] { 10, 16 };
    public static IdentityInfoCliMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override IdentityInfoCliMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override IdentityInfoCliMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.IdentityMsg.internal__static_protocol_IdentityInfoCliMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<IdentityInfoCliMsg, IdentityInfoCliMsg.Builder> InternalFieldAccessors {
      get { return global::protocol.IdentityMsg.internal__static_protocol_IdentityInfoCliMsg__FieldAccessorTable; }
    }
    
    public const int MacFieldNumber = 1;
    private bool hasMac;
    private string mac_ = "";
    public bool HasMac {
      get { return hasMac; }
    }
    public string Mac {
      get { return mac_; }
    }
    
    public const int UsrIdFieldNumber = 2;
    private bool hasUsrId;
    private uint usrId_;
    public bool HasUsrId {
      get { return hasUsrId; }
    }
    [global::System.CLSCompliant(false)]
    public uint UsrId {
      get { return usrId_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMac) return false;
        if (!hasUsrId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _identityInfoCliMsgFieldNames;
      if (hasMac) {
        output.WriteString(1, field_names[0], Mac);
      }
      if (hasUsrId) {
        output.WriteUInt32(2, field_names[1], UsrId);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMac) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Mac);
      }
      if (hasUsrId) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, UsrId);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static IdentityInfoCliMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static IdentityInfoCliMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private IdentityInfoCliMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(IdentityInfoCliMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<IdentityInfoCliMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(IdentityInfoCliMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private IdentityInfoCliMsg result;
      
      private IdentityInfoCliMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          IdentityInfoCliMsg original = result;
          result = new IdentityInfoCliMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override IdentityInfoCliMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.IdentityInfoCliMsg.Descriptor; }
      }
      
      public override IdentityInfoCliMsg DefaultInstanceForType {
        get { return global::protocol.IdentityInfoCliMsg.DefaultInstance; }
      }
      
      public override IdentityInfoCliMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is IdentityInfoCliMsg) {
          return MergeFrom((IdentityInfoCliMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(IdentityInfoCliMsg other) {
        if (other == global::protocol.IdentityInfoCliMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMac) {
          Mac = other.Mac;
        }
        if (other.HasUsrId) {
          UsrId = other.UsrId;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_identityInfoCliMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _identityInfoCliMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMac = input.ReadString(ref result.mac_);
              break;
            }
            case 16: {
              result.hasUsrId = input.ReadUInt32(ref result.usrId_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMac {
        get { return result.hasMac; }
      }
      public string Mac {
        get { return result.Mac; }
        set { SetMac(value); }
      }
      public Builder SetMac(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMac = true;
        result.mac_ = value;
        return this;
      }
      public Builder ClearMac() {
        PrepareBuilder();
        result.hasMac = false;
        result.mac_ = "";
        return this;
      }
      
      public bool HasUsrId {
        get { return result.hasUsrId; }
      }
      [global::System.CLSCompliant(false)]
      public uint UsrId {
        get { return result.UsrId; }
        set { SetUsrId(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUsrId(uint value) {
        PrepareBuilder();
        result.hasUsrId = true;
        result.usrId_ = value;
        return this;
      }
      public Builder ClearUsrId() {
        PrepareBuilder();
        result.hasUsrId = false;
        result.usrId_ = 0;
        return this;
      }
    }
    static IdentityInfoCliMsg() {
      object.ReferenceEquals(global::protocol.IdentityMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
