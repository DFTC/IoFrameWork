// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class DevLoginMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_protocol_DevLoginReq__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.DevLoginReq, global::protocol.DevLoginReq.Builder> internal__static_protocol_DevLoginReq__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protocol_DevLoginRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.DevLoginRsp, global::protocol.DevLoginRsp.Builder> internal__static_protocol_DevLoginRsp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static DevLoginMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFEZXZMb2dpbk1zZy5wcm90bxIIcHJvdG9jb2wiKgoLRGV2TG9naW5SZXES", 
            "CwoDTWFjGAEgAigJEg4KBk1hY01kNRgCIAIoCSIyCgtEZXZMb2dpblJzcBIM", 
          "CgRDb2RlGAEgAigNEhUKB1VEUFBvcnQYAiABKA06BDY1NDU="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_protocol_DevLoginReq__Descriptor = Descriptor.MessageTypes[0];
        internal__static_protocol_DevLoginReq__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.DevLoginReq, global::protocol.DevLoginReq.Builder>(internal__static_protocol_DevLoginReq__Descriptor,
                new string[] { "Mac", "MacMd5", });
        internal__static_protocol_DevLoginRsp__Descriptor = Descriptor.MessageTypes[1];
        internal__static_protocol_DevLoginRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.DevLoginRsp, global::protocol.DevLoginRsp.Builder>(internal__static_protocol_DevLoginRsp__Descriptor,
                new string[] { "Code", "UDPPort", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DevLoginReq : pb::GeneratedMessage<DevLoginReq, DevLoginReq.Builder> {
    private DevLoginReq() { }
    private static readonly DevLoginReq defaultInstance = new DevLoginReq().MakeReadOnly();
    private static readonly string[] _devLoginReqFieldNames = new string[] { "Mac", "MacMd5" };
    private static readonly uint[] _devLoginReqFieldTags = new uint[] { 10, 18 };
    public static DevLoginReq DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DevLoginReq DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DevLoginReq ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.DevLoginMsg.internal__static_protocol_DevLoginReq__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DevLoginReq, DevLoginReq.Builder> InternalFieldAccessors {
      get { return global::protocol.DevLoginMsg.internal__static_protocol_DevLoginReq__FieldAccessorTable; }
    }
    
    public const int MacFieldNumber = 1;
    private bool hasMac;
    private string mac_ = "";
    public bool HasMac {
      get { return hasMac; }
    }
    public string Mac {
      get { return mac_; }
    }
    
    public const int MacMd5FieldNumber = 2;
    private bool hasMacMd5;
    private string macMd5_ = "";
    public bool HasMacMd5 {
      get { return hasMacMd5; }
    }
    public string MacMd5 {
      get { return macMd5_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasMac) return false;
        if (!hasMacMd5) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _devLoginReqFieldNames;
      if (hasMac) {
        output.WriteString(1, field_names[0], Mac);
      }
      if (hasMacMd5) {
        output.WriteString(2, field_names[1], MacMd5);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasMac) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Mac);
      }
      if (hasMacMd5) {
        size += pb::CodedOutputStream.ComputeStringSize(2, MacMd5);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DevLoginReq ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DevLoginReq ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DevLoginReq ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DevLoginReq ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DevLoginReq ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DevLoginReq ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DevLoginReq ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DevLoginReq ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DevLoginReq ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DevLoginReq ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DevLoginReq MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DevLoginReq prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DevLoginReq, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DevLoginReq cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DevLoginReq result;
      
      private DevLoginReq PrepareBuilder() {
        if (resultIsReadOnly) {
          DevLoginReq original = result;
          result = new DevLoginReq();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DevLoginReq MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.DevLoginReq.Descriptor; }
      }
      
      public override DevLoginReq DefaultInstanceForType {
        get { return global::protocol.DevLoginReq.DefaultInstance; }
      }
      
      public override DevLoginReq BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DevLoginReq) {
          return MergeFrom((DevLoginReq) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DevLoginReq other) {
        if (other == global::protocol.DevLoginReq.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasMac) {
          Mac = other.Mac;
        }
        if (other.HasMacMd5) {
          MacMd5 = other.MacMd5;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_devLoginReqFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _devLoginReqFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasMac = input.ReadString(ref result.mac_);
              break;
            }
            case 18: {
              result.hasMacMd5 = input.ReadString(ref result.macMd5_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasMac {
        get { return result.hasMac; }
      }
      public string Mac {
        get { return result.Mac; }
        set { SetMac(value); }
      }
      public Builder SetMac(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMac = true;
        result.mac_ = value;
        return this;
      }
      public Builder ClearMac() {
        PrepareBuilder();
        result.hasMac = false;
        result.mac_ = "";
        return this;
      }
      
      public bool HasMacMd5 {
        get { return result.hasMacMd5; }
      }
      public string MacMd5 {
        get { return result.MacMd5; }
        set { SetMacMd5(value); }
      }
      public Builder SetMacMd5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMacMd5 = true;
        result.macMd5_ = value;
        return this;
      }
      public Builder ClearMacMd5() {
        PrepareBuilder();
        result.hasMacMd5 = false;
        result.macMd5_ = "";
        return this;
      }
    }
    static DevLoginReq() {
      object.ReferenceEquals(global::protocol.DevLoginMsg.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class DevLoginRsp : pb::GeneratedMessage<DevLoginRsp, DevLoginRsp.Builder> {
    private DevLoginRsp() { }
    private static readonly DevLoginRsp defaultInstance = new DevLoginRsp().MakeReadOnly();
    private static readonly string[] _devLoginRspFieldNames = new string[] { "Code", "UDPPort" };
    private static readonly uint[] _devLoginRspFieldTags = new uint[] { 8, 16 };
    public static DevLoginRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override DevLoginRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override DevLoginRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.DevLoginMsg.internal__static_protocol_DevLoginRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<DevLoginRsp, DevLoginRsp.Builder> InternalFieldAccessors {
      get { return global::protocol.DevLoginMsg.internal__static_protocol_DevLoginRsp__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private uint code_;
    public bool HasCode {
      get { return hasCode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Code {
      get { return code_; }
    }
    
    public const int UDPPortFieldNumber = 2;
    private bool hasUDPPort;
    private uint uDPPort_ = 6545;
    public bool HasUDPPort {
      get { return hasUDPPort; }
    }
    [global::System.CLSCompliant(false)]
    public uint UDPPort {
      get { return uDPPort_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _devLoginRspFieldNames;
      if (hasCode) {
        output.WriteUInt32(1, field_names[0], Code);
      }
      if (hasUDPPort) {
        output.WriteUInt32(2, field_names[1], UDPPort);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Code);
      }
      if (hasUDPPort) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, UDPPort);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static DevLoginRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DevLoginRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DevLoginRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static DevLoginRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static DevLoginRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DevLoginRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static DevLoginRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static DevLoginRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static DevLoginRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static DevLoginRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private DevLoginRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(DevLoginRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<DevLoginRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(DevLoginRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private DevLoginRsp result;
      
      private DevLoginRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          DevLoginRsp original = result;
          result = new DevLoginRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override DevLoginRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.DevLoginRsp.Descriptor; }
      }
      
      public override DevLoginRsp DefaultInstanceForType {
        get { return global::protocol.DevLoginRsp.DefaultInstance; }
      }
      
      public override DevLoginRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is DevLoginRsp) {
          return MergeFrom((DevLoginRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(DevLoginRsp other) {
        if (other == global::protocol.DevLoginRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        if (other.HasUDPPort) {
          UDPPort = other.UDPPort;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_devLoginRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _devLoginRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCode = input.ReadUInt32(ref result.code_);
              break;
            }
            case 16: {
              result.hasUDPPort = input.ReadUInt32(ref result.uDPPort_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCode(uint value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
      
      public bool HasUDPPort {
        get { return result.hasUDPPort; }
      }
      [global::System.CLSCompliant(false)]
      public uint UDPPort {
        get { return result.UDPPort; }
        set { SetUDPPort(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetUDPPort(uint value) {
        PrepareBuilder();
        result.hasUDPPort = true;
        result.uDPPort_ = value;
        return this;
      }
      public Builder ClearUDPPort() {
        PrepareBuilder();
        result.hasUDPPort = false;
        result.uDPPort_ = 6545;
        return this;
      }
    }
    static DevLoginRsp() {
      object.ReferenceEquals(global::protocol.DevLoginMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
