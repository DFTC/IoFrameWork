// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class KeepMsg {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_protocol_KeepAliveMsg__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.KeepAliveMsg, global::protocol.KeepAliveMsg.Builder> internal__static_protocol_KeepAliveMsg__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static KeepMsg() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1LZWVwTXNnLnByb3RvEghwcm90b2NvbCIpCgxLZWVwQWxpdmVNc2cSDAoB", 
          "QRgBIAEoDToBMBILCgFCGAIgASgJOgA="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_protocol_KeepAliveMsg__Descriptor = Descriptor.MessageTypes[0];
        internal__static_protocol_KeepAliveMsg__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.KeepAliveMsg, global::protocol.KeepAliveMsg.Builder>(internal__static_protocol_KeepAliveMsg__Descriptor,
                new string[] { "A", "B", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class KeepAliveMsg : pb::GeneratedMessage<KeepAliveMsg, KeepAliveMsg.Builder> {
    private KeepAliveMsg() { }
    private static readonly KeepAliveMsg defaultInstance = new KeepAliveMsg().MakeReadOnly();
    private static readonly string[] _keepAliveMsgFieldNames = new string[] { "A", "B" };
    private static readonly uint[] _keepAliveMsgFieldTags = new uint[] { 8, 18 };
    public static KeepAliveMsg DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override KeepAliveMsg DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override KeepAliveMsg ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.KeepMsg.internal__static_protocol_KeepAliveMsg__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<KeepAliveMsg, KeepAliveMsg.Builder> InternalFieldAccessors {
      get { return global::protocol.KeepMsg.internal__static_protocol_KeepAliveMsg__FieldAccessorTable; }
    }
    
    public const int AFieldNumber = 1;
    private bool hasA;
    private uint a_;
    public bool HasA {
      get { return hasA; }
    }
    [global::System.CLSCompliant(false)]
    public uint A {
      get { return a_; }
    }
    
    public const int BFieldNumber = 2;
    private bool hasB;
    private string b_ = "";
    public bool HasB {
      get { return hasB; }
    }
    public string B {
      get { return b_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _keepAliveMsgFieldNames;
      if (hasA) {
        output.WriteUInt32(1, field_names[0], A);
      }
      if (hasB) {
        output.WriteString(2, field_names[1], B);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasA) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, A);
      }
      if (hasB) {
        size += pb::CodedOutputStream.ComputeStringSize(2, B);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static KeepAliveMsg ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KeepAliveMsg ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KeepAliveMsg ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static KeepAliveMsg ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static KeepAliveMsg ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KeepAliveMsg ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static KeepAliveMsg ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static KeepAliveMsg ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static KeepAliveMsg ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static KeepAliveMsg ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private KeepAliveMsg MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(KeepAliveMsg prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<KeepAliveMsg, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(KeepAliveMsg cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private KeepAliveMsg result;
      
      private KeepAliveMsg PrepareBuilder() {
        if (resultIsReadOnly) {
          KeepAliveMsg original = result;
          result = new KeepAliveMsg();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override KeepAliveMsg MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.KeepAliveMsg.Descriptor; }
      }
      
      public override KeepAliveMsg DefaultInstanceForType {
        get { return global::protocol.KeepAliveMsg.DefaultInstance; }
      }
      
      public override KeepAliveMsg BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is KeepAliveMsg) {
          return MergeFrom((KeepAliveMsg) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(KeepAliveMsg other) {
        if (other == global::protocol.KeepAliveMsg.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasA) {
          A = other.A;
        }
        if (other.HasB) {
          B = other.B;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_keepAliveMsgFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _keepAliveMsgFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasA = input.ReadUInt32(ref result.a_);
              break;
            }
            case 18: {
              result.hasB = input.ReadString(ref result.b_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasA {
        get { return result.hasA; }
      }
      [global::System.CLSCompliant(false)]
      public uint A {
        get { return result.A; }
        set { SetA(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetA(uint value) {
        PrepareBuilder();
        result.hasA = true;
        result.a_ = value;
        return this;
      }
      public Builder ClearA() {
        PrepareBuilder();
        result.hasA = false;
        result.a_ = 0;
        return this;
      }
      
      public bool HasB {
        get { return result.hasB; }
      }
      public string B {
        get { return result.B; }
        set { SetB(value); }
      }
      public Builder SetB(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasB = true;
        result.b_ = value;
        return this;
      }
      public Builder ClearB() {
        PrepareBuilder();
        result.hasB = false;
        result.b_ = "";
        return this;
      }
    }
    static KeepAliveMsg() {
      object.ReferenceEquals(global::protocol.KeepMsg.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
