// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace protocol {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class ProtoHead {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_protocol_SampleProtect__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.SampleProtect, global::protocol.SampleProtect.Builder> internal__static_protocol_SampleProtect__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protocol_SampleProtectRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.SampleProtectRsp, global::protocol.SampleProtectRsp.Builder> internal__static_protocol_SampleProtectRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protocol_SampleCli__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.SampleCli, global::protocol.SampleCli.Builder> internal__static_protocol_SampleCli__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protocol_SampleCliRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.SampleCliRsp, global::protocol.SampleCliRsp.Builder> internal__static_protocol_SampleCliRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_protocol_SampleRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::protocol.SampleRsp, global::protocol.SampleRsp.Builder> internal__static_protocol_SampleRsp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static ProtoHead() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9Qcm90b0hlYWQucHJvdG8SCHByb3RvY29sGhFJZGVudGl0eU1zZy5wcm90", 
            "byI4Cg1TYW1wbGVQcm90ZWN0EicKBElkZW4YASACKAsyGS5wcm90b2NvbC5J", 
            "ZGVudGl0eUluZm9Nc2ciSQoQU2FtcGxlUHJvdGVjdFJzcBInCgRJZGVuGAEg", 
            "AigLMhkucHJvdG9jb2wuSWRlbnRpdHlJbmZvTXNnEgwKBENvZGUYAiACKA0i", 
            "NwoJU2FtcGxlQ2xpEioKBElkZW4YASACKAsyHC5wcm90b2NvbC5JZGVudGl0", 
            "eUluZm9DbGlNc2ciSAoMU2FtcGxlQ2xpUnNwEioKBElkZW4YASACKAsyHC5w", 
            "cm90b2NvbC5JZGVudGl0eUluZm9DbGlNc2cSDAoEQ29kZRgCIAIoDSIZCglT", 
            "YW1wbGVSc3ASDAoEQ29kZRgBIAIoDSqiBAoISGVhZFR5cGUSDQoJTE9HSU5f", 
            "UkVREAASDQoJTE9HSU5fUlNQEAESDQoJS0VFUEFMSVZFEAISDwoLQ09NTUFO", 
            "RF9SRVEQAxIPCgtDT01NQU5EX1JTUBAEEgsKB0xPR19SRVEQBRILCgdMT0df", 
            "UlNQEAYSDwoLR0VUX0xPR19SRVEQBxIPCgtHRVRfTE9HX1JTUBAIEg8KC0NB", 
            "UFRVUkVfUkVREAkSDwoLQ0FQVFVSRV9SU1AQChIPCgtWRVJTSU9OX1JFURAL", 
            "Eg8KC1ZFUlNJT05fUlNQEAwSEQoNQ0xJX0xPR0lOX1JFURANEhEKDUNMSV9M", 
            "T0dJTl9SU1AQDhIVChFDTElfTE9HSU5fUFJFX1JFURAPEhUKEUNMSV9MT0dJ", 
            "Tl9QUkVfUlNQEBASFQoRRklMRV9ET1dOTE9BRF9SRVEQERIVChFGSUxFX0RP", 
            "V05MT0FEX1JTUBASEhYKEkZJTEVfRE9XTkxPQURfT1ZFUhATEhIKDkZJTEVf", 
            "UVVFUllfUkVREBQSEgoORklMRV9RVUVSWV9SU1AQFRIRCg1SRUFMX1BMQVlf", 
            "UkVREBYSEQoNUkVBTF9QTEFZX1JTUBAXEgsKB05BVF9SRVEQGBILCgdOQVRf", 
            "UlNQEBkSDAoIVURQX0RBVEEQGhIRCg1ERVZfTE9HSU5fUkVREBsSEQoNREVW", 
          "X0xPR0lOX1JTUBAcEhEKDUlQQ0FNRVJBX1NUQVQQHQ=="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_protocol_SampleProtect__Descriptor = Descriptor.MessageTypes[0];
        internal__static_protocol_SampleProtect__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.SampleProtect, global::protocol.SampleProtect.Builder>(internal__static_protocol_SampleProtect__Descriptor,
                new string[] { "Iden", });
        internal__static_protocol_SampleProtectRsp__Descriptor = Descriptor.MessageTypes[1];
        internal__static_protocol_SampleProtectRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.SampleProtectRsp, global::protocol.SampleProtectRsp.Builder>(internal__static_protocol_SampleProtectRsp__Descriptor,
                new string[] { "Iden", "Code", });
        internal__static_protocol_SampleCli__Descriptor = Descriptor.MessageTypes[2];
        internal__static_protocol_SampleCli__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.SampleCli, global::protocol.SampleCli.Builder>(internal__static_protocol_SampleCli__Descriptor,
                new string[] { "Iden", });
        internal__static_protocol_SampleCliRsp__Descriptor = Descriptor.MessageTypes[3];
        internal__static_protocol_SampleCliRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.SampleCliRsp, global::protocol.SampleCliRsp.Builder>(internal__static_protocol_SampleCliRsp__Descriptor,
                new string[] { "Iden", "Code", });
        internal__static_protocol_SampleRsp__Descriptor = Descriptor.MessageTypes[4];
        internal__static_protocol_SampleRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::protocol.SampleRsp, global::protocol.SampleRsp.Builder>(internal__static_protocol_SampleRsp__Descriptor,
                new string[] { "Code", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          global::protocol.IdentityMsg.Descriptor, 
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum HeadType {
    LOGIN_REQ = 0,
    LOGIN_RSP = 1,
    KEEPALIVE = 2,
    COMMAND_REQ = 3,
    COMMAND_RSP = 4,
    LOG_REQ = 5,
    LOG_RSP = 6,
    GET_LOG_REQ = 7,
    GET_LOG_RSP = 8,
    CAPTURE_REQ = 9,
    CAPTURE_RSP = 10,
    VERSION_REQ = 11,
    VERSION_RSP = 12,
    CLI_LOGIN_REQ = 13,
    CLI_LOGIN_RSP = 14,
    CLI_LOGIN_PRE_REQ = 15,
    CLI_LOGIN_PRE_RSP = 16,
    FILE_DOWNLOAD_REQ = 17,
    FILE_DOWNLOAD_RSP = 18,
    FILE_DOWNLOAD_OVER = 19,
    FILE_QUERY_REQ = 20,
    FILE_QUERY_RSP = 21,
    REAL_PLAY_REQ = 22,
    REAL_PLAY_RSP = 23,
    NAT_REQ = 24,
    NAT_RSP = 25,
    UDP_DATA = 26,
    DEV_LOGIN_REQ = 27,
    DEV_LOGIN_RSP = 28,
    IPCAMERA_STAT = 29,
    CUSTOM_Req = 30,
    CUSTOM_Rsp = 31,
    }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SampleProtect : pb::GeneratedMessage<SampleProtect, SampleProtect.Builder> {
    private SampleProtect() { }
    private static readonly SampleProtect defaultInstance = new SampleProtect().MakeReadOnly();
    private static readonly string[] _sampleProtectFieldNames = new string[] { "Iden" };
    private static readonly uint[] _sampleProtectFieldTags = new uint[] { 10 };
    public static SampleProtect DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SampleProtect DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SampleProtect ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleProtect__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SampleProtect, SampleProtect.Builder> InternalFieldAccessors {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleProtect__FieldAccessorTable; }
    }
    
    public const int IdenFieldNumber = 1;
    private bool hasIden;
    private global::protocol.IdentityInfoMsg iden_;
    public bool HasIden {
      get { return hasIden; }
    }
    public global::protocol.IdentityInfoMsg Iden {
      get { return iden_ ?? global::protocol.IdentityInfoMsg.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIden) return false;
        if (!Iden.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sampleProtectFieldNames;
      if (hasIden) {
        output.WriteMessage(1, field_names[0], Iden);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIden) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iden);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SampleProtect ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleProtect ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleProtect ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleProtect ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleProtect ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleProtect ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SampleProtect ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SampleProtect ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SampleProtect ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleProtect ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SampleProtect MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SampleProtect prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SampleProtect, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SampleProtect cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SampleProtect result;
      
      private SampleProtect PrepareBuilder() {
        if (resultIsReadOnly) {
          SampleProtect original = result;
          result = new SampleProtect();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SampleProtect MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.SampleProtect.Descriptor; }
      }
      
      public override SampleProtect DefaultInstanceForType {
        get { return global::protocol.SampleProtect.DefaultInstance; }
      }
      
      public override SampleProtect BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SampleProtect) {
          return MergeFrom((SampleProtect) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SampleProtect other) {
        if (other == global::protocol.SampleProtect.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIden) {
          MergeIden(other.Iden);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sampleProtectFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sampleProtectFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::protocol.IdentityInfoMsg.Builder subBuilder = global::protocol.IdentityInfoMsg.CreateBuilder();
              if (result.hasIden) {
                subBuilder.MergeFrom(Iden);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Iden = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIden {
       get { return result.hasIden; }
      }
      public global::protocol.IdentityInfoMsg Iden {
        get { return result.Iden; }
        set { SetIden(value); }
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = value;
        return this;
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIden &&
            result.iden_ != global::protocol.IdentityInfoMsg.DefaultInstance) {
            result.iden_ = global::protocol.IdentityInfoMsg.CreateBuilder(result.iden_).MergeFrom(value).BuildPartial();
        } else {
          result.iden_ = value;
        }
        result.hasIden = true;
        return this;
      }
      public Builder ClearIden() {
        PrepareBuilder();
        result.hasIden = false;
        result.iden_ = null;
        return this;
      }
    }
    static SampleProtect() {
      object.ReferenceEquals(global::protocol.ProtoHead.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SampleProtectRsp : pb::GeneratedMessage<SampleProtectRsp, SampleProtectRsp.Builder> {
    private SampleProtectRsp() { }
    private static readonly SampleProtectRsp defaultInstance = new SampleProtectRsp().MakeReadOnly();
    private static readonly string[] _sampleProtectRspFieldNames = new string[] { "Code", "Iden" };
    private static readonly uint[] _sampleProtectRspFieldTags = new uint[] { 16, 10 };
    public static SampleProtectRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SampleProtectRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SampleProtectRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleProtectRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SampleProtectRsp, SampleProtectRsp.Builder> InternalFieldAccessors {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleProtectRsp__FieldAccessorTable; }
    }
    
    public const int IdenFieldNumber = 1;
    private bool hasIden;
    private global::protocol.IdentityInfoMsg iden_;
    public bool HasIden {
      get { return hasIden; }
    }
    public global::protocol.IdentityInfoMsg Iden {
      get { return iden_ ?? global::protocol.IdentityInfoMsg.DefaultInstance; }
    }
    
    public const int CodeFieldNumber = 2;
    private bool hasCode;
    private uint code_;
    public bool HasCode {
      get { return hasCode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIden) return false;
        if (!hasCode) return false;
        if (!Iden.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sampleProtectRspFieldNames;
      if (hasIden) {
        output.WriteMessage(1, field_names[1], Iden);
      }
      if (hasCode) {
        output.WriteUInt32(2, field_names[0], Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIden) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iden);
      }
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SampleProtectRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleProtectRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleProtectRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleProtectRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleProtectRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleProtectRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SampleProtectRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SampleProtectRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SampleProtectRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleProtectRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SampleProtectRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SampleProtectRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SampleProtectRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SampleProtectRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SampleProtectRsp result;
      
      private SampleProtectRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          SampleProtectRsp original = result;
          result = new SampleProtectRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SampleProtectRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.SampleProtectRsp.Descriptor; }
      }
      
      public override SampleProtectRsp DefaultInstanceForType {
        get { return global::protocol.SampleProtectRsp.DefaultInstance; }
      }
      
      public override SampleProtectRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SampleProtectRsp) {
          return MergeFrom((SampleProtectRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SampleProtectRsp other) {
        if (other == global::protocol.SampleProtectRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIden) {
          MergeIden(other.Iden);
        }
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sampleProtectRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sampleProtectRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::protocol.IdentityInfoMsg.Builder subBuilder = global::protocol.IdentityInfoMsg.CreateBuilder();
              if (result.hasIden) {
                subBuilder.MergeFrom(Iden);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Iden = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasCode = input.ReadUInt32(ref result.code_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIden {
       get { return result.hasIden; }
      }
      public global::protocol.IdentityInfoMsg Iden {
        get { return result.Iden; }
        set { SetIden(value); }
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = value;
        return this;
      }
      public Builder SetIden(global::protocol.IdentityInfoMsg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIden(global::protocol.IdentityInfoMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIden &&
            result.iden_ != global::protocol.IdentityInfoMsg.DefaultInstance) {
            result.iden_ = global::protocol.IdentityInfoMsg.CreateBuilder(result.iden_).MergeFrom(value).BuildPartial();
        } else {
          result.iden_ = value;
        }
        result.hasIden = true;
        return this;
      }
      public Builder ClearIden() {
        PrepareBuilder();
        result.hasIden = false;
        result.iden_ = null;
        return this;
      }
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCode(uint value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
    }
    static SampleProtectRsp() {
      object.ReferenceEquals(global::protocol.ProtoHead.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SampleCli : pb::GeneratedMessage<SampleCli, SampleCli.Builder> {
    private SampleCli() { }
    private static readonly SampleCli defaultInstance = new SampleCli().MakeReadOnly();
    private static readonly string[] _sampleCliFieldNames = new string[] { "Iden" };
    private static readonly uint[] _sampleCliFieldTags = new uint[] { 10 };
    public static SampleCli DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SampleCli DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SampleCli ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleCli__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SampleCli, SampleCli.Builder> InternalFieldAccessors {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleCli__FieldAccessorTable; }
    }
    
    public const int IdenFieldNumber = 1;
    private bool hasIden;
    private global::protocol.IdentityInfoCliMsg iden_;
    public bool HasIden {
      get { return hasIden; }
    }
    public global::protocol.IdentityInfoCliMsg Iden {
      get { return iden_ ?? global::protocol.IdentityInfoCliMsg.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIden) return false;
        if (!Iden.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sampleCliFieldNames;
      if (hasIden) {
        output.WriteMessage(1, field_names[0], Iden);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIden) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iden);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SampleCli ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleCli ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleCli ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleCli ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleCli ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleCli ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SampleCli ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SampleCli ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SampleCli ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleCli ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SampleCli MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SampleCli prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SampleCli, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SampleCli cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SampleCli result;
      
      private SampleCli PrepareBuilder() {
        if (resultIsReadOnly) {
          SampleCli original = result;
          result = new SampleCli();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SampleCli MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.SampleCli.Descriptor; }
      }
      
      public override SampleCli DefaultInstanceForType {
        get { return global::protocol.SampleCli.DefaultInstance; }
      }
      
      public override SampleCli BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SampleCli) {
          return MergeFrom((SampleCli) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SampleCli other) {
        if (other == global::protocol.SampleCli.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIden) {
          MergeIden(other.Iden);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sampleCliFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sampleCliFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::protocol.IdentityInfoCliMsg.Builder subBuilder = global::protocol.IdentityInfoCliMsg.CreateBuilder();
              if (result.hasIden) {
                subBuilder.MergeFrom(Iden);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Iden = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIden {
       get { return result.hasIden; }
      }
      public global::protocol.IdentityInfoCliMsg Iden {
        get { return result.Iden; }
        set { SetIden(value); }
      }
      public Builder SetIden(global::protocol.IdentityInfoCliMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = value;
        return this;
      }
      public Builder SetIden(global::protocol.IdentityInfoCliMsg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIden(global::protocol.IdentityInfoCliMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIden &&
            result.iden_ != global::protocol.IdentityInfoCliMsg.DefaultInstance) {
            result.iden_ = global::protocol.IdentityInfoCliMsg.CreateBuilder(result.iden_).MergeFrom(value).BuildPartial();
        } else {
          result.iden_ = value;
        }
        result.hasIden = true;
        return this;
      }
      public Builder ClearIden() {
        PrepareBuilder();
        result.hasIden = false;
        result.iden_ = null;
        return this;
      }
    }
    static SampleCli() {
      object.ReferenceEquals(global::protocol.ProtoHead.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SampleCliRsp : pb::GeneratedMessage<SampleCliRsp, SampleCliRsp.Builder> {
    private SampleCliRsp() { }
    private static readonly SampleCliRsp defaultInstance = new SampleCliRsp().MakeReadOnly();
    private static readonly string[] _sampleCliRspFieldNames = new string[] { "Code", "Iden" };
    private static readonly uint[] _sampleCliRspFieldTags = new uint[] { 16, 10 };
    public static SampleCliRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SampleCliRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SampleCliRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleCliRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SampleCliRsp, SampleCliRsp.Builder> InternalFieldAccessors {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleCliRsp__FieldAccessorTable; }
    }
    
    public const int IdenFieldNumber = 1;
    private bool hasIden;
    private global::protocol.IdentityInfoCliMsg iden_;
    public bool HasIden {
      get { return hasIden; }
    }
    public global::protocol.IdentityInfoCliMsg Iden {
      get { return iden_ ?? global::protocol.IdentityInfoCliMsg.DefaultInstance; }
    }
    
    public const int CodeFieldNumber = 2;
    private bool hasCode;
    private uint code_;
    public bool HasCode {
      get { return hasCode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasIden) return false;
        if (!hasCode) return false;
        if (!Iden.IsInitialized) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sampleCliRspFieldNames;
      if (hasIden) {
        output.WriteMessage(1, field_names[1], Iden);
      }
      if (hasCode) {
        output.WriteUInt32(2, field_names[0], Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasIden) {
        size += pb::CodedOutputStream.ComputeMessageSize(1, Iden);
      }
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(2, Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SampleCliRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleCliRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleCliRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleCliRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleCliRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleCliRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SampleCliRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SampleCliRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SampleCliRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleCliRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SampleCliRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SampleCliRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SampleCliRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SampleCliRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SampleCliRsp result;
      
      private SampleCliRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          SampleCliRsp original = result;
          result = new SampleCliRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SampleCliRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.SampleCliRsp.Descriptor; }
      }
      
      public override SampleCliRsp DefaultInstanceForType {
        get { return global::protocol.SampleCliRsp.DefaultInstance; }
      }
      
      public override SampleCliRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SampleCliRsp) {
          return MergeFrom((SampleCliRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SampleCliRsp other) {
        if (other == global::protocol.SampleCliRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasIden) {
          MergeIden(other.Iden);
        }
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sampleCliRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sampleCliRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::protocol.IdentityInfoCliMsg.Builder subBuilder = global::protocol.IdentityInfoCliMsg.CreateBuilder();
              if (result.hasIden) {
                subBuilder.MergeFrom(Iden);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Iden = subBuilder.BuildPartial();
              break;
            }
            case 16: {
              result.hasCode = input.ReadUInt32(ref result.code_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasIden {
       get { return result.hasIden; }
      }
      public global::protocol.IdentityInfoCliMsg Iden {
        get { return result.Iden; }
        set { SetIden(value); }
      }
      public Builder SetIden(global::protocol.IdentityInfoCliMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = value;
        return this;
      }
      public Builder SetIden(global::protocol.IdentityInfoCliMsg.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasIden = true;
        result.iden_ = builderForValue.Build();
        return this;
      }
      public Builder MergeIden(global::protocol.IdentityInfoCliMsg value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasIden &&
            result.iden_ != global::protocol.IdentityInfoCliMsg.DefaultInstance) {
            result.iden_ = global::protocol.IdentityInfoCliMsg.CreateBuilder(result.iden_).MergeFrom(value).BuildPartial();
        } else {
          result.iden_ = value;
        }
        result.hasIden = true;
        return this;
      }
      public Builder ClearIden() {
        PrepareBuilder();
        result.hasIden = false;
        result.iden_ = null;
        return this;
      }
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCode(uint value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
    }
    static SampleCliRsp() {
      object.ReferenceEquals(global::protocol.ProtoHead.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class SampleRsp : pb::GeneratedMessage<SampleRsp, SampleRsp.Builder> {
    private SampleRsp() { }
    private static readonly SampleRsp defaultInstance = new SampleRsp().MakeReadOnly();
    private static readonly string[] _sampleRspFieldNames = new string[] { "Code" };
    private static readonly uint[] _sampleRspFieldTags = new uint[] { 8 };
    public static SampleRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override SampleRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override SampleRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<SampleRsp, SampleRsp.Builder> InternalFieldAccessors {
      get { return global::protocol.ProtoHead.internal__static_protocol_SampleRsp__FieldAccessorTable; }
    }
    
    public const int CodeFieldNumber = 1;
    private bool hasCode;
    private uint code_;
    public bool HasCode {
      get { return hasCode; }
    }
    [global::System.CLSCompliant(false)]
    public uint Code {
      get { return code_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCode) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _sampleRspFieldNames;
      if (hasCode) {
        output.WriteUInt32(1, field_names[0], Code);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCode) {
        size += pb::CodedOutputStream.ComputeUInt32Size(1, Code);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static SampleRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static SampleRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static SampleRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static SampleRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static SampleRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static SampleRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static SampleRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private SampleRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(SampleRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<SampleRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(SampleRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private SampleRsp result;
      
      private SampleRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          SampleRsp original = result;
          result = new SampleRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override SampleRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::protocol.SampleRsp.Descriptor; }
      }
      
      public override SampleRsp DefaultInstanceForType {
        get { return global::protocol.SampleRsp.DefaultInstance; }
      }
      
      public override SampleRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is SampleRsp) {
          return MergeFrom((SampleRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(SampleRsp other) {
        if (other == global::protocol.SampleRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCode) {
          Code = other.Code;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_sampleRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _sampleRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasCode = input.ReadUInt32(ref result.code_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCode {
        get { return result.hasCode; }
      }
      [global::System.CLSCompliant(false)]
      public uint Code {
        get { return result.Code; }
        set { SetCode(value); }
      }
      [global::System.CLSCompliant(false)]
      public Builder SetCode(uint value) {
        PrepareBuilder();
        result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder ClearCode() {
        PrepareBuilder();
        result.hasCode = false;
        result.code_ = 0;
        return this;
      }
    }
    static SampleRsp() {
      object.ReferenceEquals(global::protocol.ProtoHead.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
